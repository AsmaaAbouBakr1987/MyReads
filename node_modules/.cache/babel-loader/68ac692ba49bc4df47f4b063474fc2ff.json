{"ast":null,"code":"import _classCallCheck from \"F:\\\\2019\\\\important\\\\React\\\\MyReads\\\\MyReads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\2019\\\\important\\\\React\\\\MyReads\\\\MyReads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\2019\\\\important\\\\React\\\\MyReads\\\\MyReads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\2019\\\\important\\\\React\\\\MyReads\\\\MyReads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\2019\\\\important\\\\React\\\\MyReads\\\\MyReads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\2019\\\\important\\\\React\\\\MyReads\\\\MyReads\\\\src\\\\App.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport BookCase from './components/BookCase';\nimport Search from './components/Search';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      showSearchPage: false\n    };\n\n    _this.moveBook = function (book, shelf) {\n      console.log('r', book, shelf);\n      BooksAPI.update(book, shelf);\n      console.log('z', _this.state.books, shelf);\n      var updatedBooks = [];\n      updatedBooks = _this.state.books.filter(function (b) {\n        return b.id !== book.id;\n      });\n      console.log('h', _this.book.id);\n\n      if (shelf !== 'none') {\n        book.shelf = shelf;\n        updatedBooks = updatedBooks.concat(book);\n      }\n\n      _this.setState({\n        books: updatedBooks\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        return _this2.setState({\n          books: books\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.showSearchPage ? React.createElement(Search, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }) : React.createElement(BookCase, {\n        books: this.state.books,\n        ShelfChange: this.moveBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["F:\\2019\\important\\React\\MyReads\\MyReads\\src\\App.js"],"names":["React","BooksAPI","BookCase","Search","BooksApp","state","books","showSearchPage","moveBook","book","shelf","console","log","update","updatedBooks","filter","b","id","concat","setState","getAll","then","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;IAEMC,Q;;;;;;;;;;;;;;;;;UAIJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;;AAEN;;;;;;AAMAC,MAAAA,cAAc,EAAE;AARV,K;;UAkBRC,Q,GAAW,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAb,EAAkBH,IAAlB,EAAwBC,KAAxB;AACAT,MAAAA,QAAQ,CAACY,MAAT,CAAgBJ,IAAhB,EAAsBC,KAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAb,EAAkB,MAAKP,KAAL,CAAWC,KAA7B,EAAoCI,KAApC;AACA,UAAII,YAAY,GAAG,EAAnB;AACAA,MAAAA,YAAY,GAAG,MAAKT,KAAL,CAAWC,KAAX,CAAiBS,MAAjB,CAAwB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,EAAF,KAASR,IAAI,CAACQ,EAAlB;AAAA,OAAzB,CAAf;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiB,MAAKH,IAAL,CAAUQ,EAA3B;;AACA,UAAIP,KAAK,KAAK,MAAd,EAAsB;AACpBD,QAAAA,IAAI,CAACC,KAAL,GAAaA,KAAb;AACAI,QAAAA,YAAY,GAAGA,YAAY,CAACI,MAAb,CAAoBT,IAApB,CAAf;AACD;;AAED,YAAKU,QAAL,CAAc;AACZb,QAAAA,KAAK,EAAEQ;AADK,OAAd;AAGD,K;;;;;;;wCAtBmB;AAAA;;AAClBb,MAAAA,QAAQ,CAACmB,MAAT,GAAkBC,IAAlB,CAAuB,UAACf,KAAD;AAAA,eAAW,MAAI,CAACa,QAAL,CAAc;AAC9Cb,UAAAA,KAAK,EAALA;AAD8C,SAAd,CAAX;AAAA,OAAvB;AAGD;;;6BAoBQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWE,cAAX,GACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAIC,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAG,KAAKF,KAAL,CAAWC,KAA7B;AAAqC,QAAA,WAAW,EAAG,KAAKE,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADF;AAUD;;;;EAlDoBR,KAAK,CAACsB,S;;AAqD7B,eAAelB,QAAf","sourcesContent":["import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport BookCase from './components/BookCase'\nimport Search from './components/Search'\n\nclass BooksApp extends React.Component {\n\n  \n\n  state = {\n    books: [],\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll().then((books) => this.setState({\n      books\n    }));\n  }\n\n\n  moveBook = (book, shelf) => {\n    console.log ('r', book, shelf)\n    BooksAPI.update(book, shelf);\n    console.log ('z', this.state.books, shelf)\n    let updatedBooks = [];\n    updatedBooks = this.state.books.filter(b => b.id !== book.id);\n    console.log('h', this.book.id)\n    if (shelf !== 'none') {\n      book.shelf = shelf;\n      updatedBooks = updatedBooks.concat(book);\n    }\n\n    this.setState({\n      books: updatedBooks,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.showSearchPage ? (\n          <Search />\n        ) : (\n          \n          <BookCase books= {this.state.books}  ShelfChange= {this.moveBook}/>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}